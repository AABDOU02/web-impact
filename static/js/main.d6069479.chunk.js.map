{"version":3,"sources":["UserList.js","StatisticPage.js","Navbar.js","footer.js","App.js","index.js"],"names":["UserList","users","setUsers","useState","setLoading","setError","currentPage","setCurrentPage","selectedUser","setSelectedUser","useEffect","async","response","fetch","ok","Error","data","json","Array","isArray","error","console","message","fetchData","indexOfLastUser","indexOfFirstUser","currentUsers","slice","_jsxs","className","children","_jsx","FaUsers","scope","map","user","index","onClick","handleUserDetails","style","cursor","id","firstName","lastName","email","Pagination","from","length","Math","ceil","_","Item","active","Modal","show","onHide","handleCloseDetails","dialogClassName","Header","closeButton","Title","Body","src","image","alt","width","height","FaEnvelope","FaPhone","phone","FaBirthdayCake","birthDate","age","gender","address","city","state","postalCode","StatisticPage","axios","get","genderStatsData","getGenderStatistics","male","female","genderStats","forEach","ageStatsData","getAgeStatistics","ageStats","ageGroup","floor","bloodGroupStatsData","getBloodGroupStatistics","bloodGroupStats","group","bloodGroup","addressStatsData","getAddressStatistics","addressStats","popularBank","getPopularBank","bankCounts","_user$bankDetails","bank","bankDetails","name","maxCount","Object","entries","_ref","count","popularCryptoByGender","getPopularCryptoByGender","cryptoCounts","_user$cryptoDetails","crypto","cryptoDetails","coin","cryptoUsersByGenderAndAge","getNumberOfCryptoUsersByGenderAndAge","cryptoUsersStats","genderChartData","labels","datasets","label","backgroundColor","ageChartData","keys","values","bloodGroupChartData","addressChartData","popularCryptoMaleData","popularCryptoFemaleData","cryptoUsersByGenderAndAgeData","class","display","flexWrap","justifyContent","maxWidth","margin","flexBasis","marginBottom","Pie","Bar","Navbar","Link","to","type","Footer","App","Router","Switch","Route","exact","path","component","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.d6069479.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Pagination, Modal } from 'react-bootstrap';\r\nimport { FaEnvelope, FaPhone, FaBirthdayCake,FaUsers } from 'react-icons/fa'; // Import icons from react-icons\r\nimport './UserList.css'; //import { BsPersonBoundingBox } from \"react-icons/bs\";\r\n\r\nfunction UserList() {\r\n  const [users, setUsers] = useState([]);\r\n  const [ setLoading] = useState(true);\r\n  const [ setError] = useState(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const usersPerPage = 10;\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('https://dummyjson.com/users');\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch users');\r\n          \r\n        }\r\n        const data = await response.json();\r\n        if (Array.isArray(data)) {\r\n          setUsers(data);\r\n          \r\n          \r\n        } else if (typeof data === 'object' && data.users) {\r\n         \r\n          setUsers(data.users);\r\n          \r\n        } else {\r\n          throw new Error('Invalid data format');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching users:', error.message);\r\n        setError(error);\r\n        \r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const handleUserDetails = (user) => {\r\n    setSelectedUser(user);\r\n  };\r\n\r\n  const handleCloseDetails = () => {\r\n    setSelectedUser(null);\r\n  };\r\n\r\n  const indexOfLastUser = currentPage * usersPerPage;\r\n  const indexOfFirstUser = indexOfLastUser - usersPerPage;\r\n  const currentUsers = users.slice(indexOfFirstUser, indexOfLastUser);\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h2 className=\"mb-3\"> <FaUsers /> Users List</h2>\r\n      <table className=\"table table-striped\">\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n            <th scope=\"col\">id</th>\r\n            <th scope=\"col\">First Name</th>\r\n            <th scope=\"col\">Last Name</th>\r\n            <th scope=\"col\">Email</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {currentUsers.map((user, index) => (\r\n            <tr key={user.id} onClick={() => handleUserDetails(user)} style={{ cursor: 'pointer' }}>\r\n              <th scope=\"row\">{user.id}</th>\r\n              <td>{user.firstName}</td>\r\n              <td>{user.lastName}</td>\r\n              <td>{user.email}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <Pagination className=\"mt-3\">\r\n        {Array.from({ length: Math.ceil(users.length / usersPerPage) }, (_, index) => (\r\n          <Pagination.Item key={index + 1} active={index + 1 === currentPage} onClick={() => handlePageChange(index + 1)}>\r\n            {index + 1}\r\n          </Pagination.Item>\r\n        ))}\r\n      </Pagination>\r\n\r\n      <Modal show={!!selectedUser} onHide={handleCloseDetails} dialogClassName=\"custom-modal\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>User Details</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {selectedUser && (\r\n            <div>\r\n              <div className=\"d-flex align-items-start\">\r\n        <img src={selectedUser.image} alt={selectedUser.firstName} style={{ width: '100px', height: '100px' }} className=\"mr-3\" />\r\n                <div>\r\n                  <h5>Name: {selectedUser.firstName} {selectedUser.lastName}</h5>\r\n                  <p><FaEnvelope /> Email: {selectedUser.email}</p> \r\n                  <p><FaPhone /> Phone: {selectedUser.phone}</p> \r\n                  <p><FaBirthdayCake /> Birth Date: {selectedUser.birthDate}</p>\r\n                \r\n                </div>\r\n              </div>\r\n              <hr />\r\n              <h6>Additional Information:</h6>\r\n              <ul>\r\n                <li>Age: {selectedUser.age}</li>\r\n                <li>Gender: {selectedUser.gender}</li>\r\n                <li>Address: {selectedUser.address.address}, {selectedUser.address.city}, {selectedUser.address.state}, {selectedUser.address.postalCode}</li>\r\n               \r\n              </ul>\r\n            </div>\r\n          )}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Pie, Bar } from 'react-chartjs-2';\r\n\r\nconst StatisticPage = () => {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('https://dummyjson.com/users');\r\n        if (response.data && Array.isArray(response.data.users)) {\r\n          setUsers(response.data.users);\r\n        } else {\r\n          throw new Error('API response format error: Users data not found or not an array.');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching users:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const getGenderStatistics = () => {\r\n    if (!Array.isArray(users)) {\r\n      console.error('Users data is not an array.');\r\n      return { male: 0, female: 0 };\r\n    }\r\n\r\n    const genderStats = { male: 0, female: 0 };\r\n\r\n    users.forEach((user) => {\r\n      if (user.gender === 'male') {\r\n        genderStats.male++;\r\n      } else if (user.gender === 'female') {\r\n        genderStats.female++;\r\n      }\r\n    });\r\n\r\n    return genderStats;\r\n  };\r\n\r\n  const getAgeStatistics = () => {\r\n    if (!Array.isArray(users)) {\r\n      console.error('Users data is not an array.');\r\n      return {};\r\n    }\r\n\r\n    const ageStats = {};\r\n\r\n    users.forEach((user) => {\r\n      const ageGroup = Math.floor(user.age / 10) * 10;\r\n      if (ageStats[ageGroup]) {\r\n        ageStats[ageGroup]++;\r\n      } else {\r\n        ageStats[ageGroup] = 1;\r\n      }\r\n    });\r\n\r\n    return ageStats;\r\n  };\r\n\r\n  const getBloodGroupStatistics = () => {\r\n    if (!Array.isArray(users)) {\r\n      console.error('Users data is not an array.');\r\n      return {};\r\n    }\r\n\r\n    const bloodGroupStats = {};\r\n\r\n    users.forEach((user) => {\r\n      const group = user.bloodGroup;\r\n      if (bloodGroupStats[group]) {\r\n        bloodGroupStats[group]++;\r\n      } else {\r\n        bloodGroupStats[group] = 1;\r\n      }\r\n    });\r\n\r\n    return bloodGroupStats;\r\n  };\r\n\r\n  const getAddressStatistics = () => {\r\n    if (!Array.isArray(users)) {\r\n      console.error('Users data is not an array.');\r\n      return {};\r\n    }\r\n\r\n    const addressStats = {};\r\n\r\n    users.forEach((user) => {\r\n      const address = user.address.city;\r\n      if (addressStats[address]) {\r\n        addressStats[address]++;\r\n      } else {\r\n        addressStats[address] = 1;\r\n      }\r\n    });\r\n\r\n    return addressStats;\r\n  };\r\n\r\n  const getPopularBank = () => {\r\n    if (!Array.isArray(users)) {\r\n      console.error('Users data is not an array.');\r\n      return '';\r\n    }\r\n  \r\n    const bankCounts = {};\r\n  \r\n    users.forEach((user) => {\r\n      const bank = user.bankDetails?.name; // Add a check for bankDetails existence\r\n      if (bank) {\r\n        if (bankCounts[bank]) {\r\n          bankCounts[bank]++;\r\n        } else {\r\n          bankCounts[bank] = 1;\r\n        }\r\n      }\r\n    });\r\n  \r\n    let popularBank = '';\r\n    let maxCount = 0;\r\n  \r\n    Object.entries(bankCounts).forEach(([bank, count]) => {\r\n      if (count > maxCount) {\r\n        maxCount = count;\r\n        popularBank = bank;\r\n      }\r\n    });\r\n  \r\n    return popularBank;\r\n  };\r\n\r\n  const getPopularCryptoByGender = () => {\r\n    if (!Array.isArray(users)) {\r\n      console.error('Users data is not an array.');\r\n      return { male: {}, female: {} };\r\n    }\r\n  \r\n    const cryptoCounts = { male: {}, female: {} };\r\n  \r\n    users.forEach((user) => {\r\n      const gender = user.gender;\r\n      const crypto = user.cryptoDetails?.coin; // Add a check for cryptoDetails existence\r\n      if (crypto) {\r\n        if (cryptoCounts[gender][crypto]) {\r\n          cryptoCounts[gender][crypto]++;\r\n        } else {\r\n          cryptoCounts[gender][crypto] = 1;\r\n        }\r\n      }\r\n    });\r\n  \r\n    return cryptoCounts;\r\n  };\r\n  \r\n  const getNumberOfCryptoUsersByGenderAndAge = () => {\r\n    if (!Array.isArray(users)) {\r\n      console.error('Users data is not an array.');\r\n      return {};\r\n    }\r\n\r\n    const cryptoUsersStats = { male: {}, female: {} };\r\n\r\n    users.forEach((user) => {\r\n      const gender = user.gender;\r\n      const ageGroup = Math.floor(user.age / 10) * 10;\r\n\r\n      if (cryptoUsersStats[gender][ageGroup]) {\r\n        cryptoUsersStats[gender][ageGroup]++;\r\n      } else {\r\n        cryptoUsersStats[gender][ageGroup] = 1;\r\n      }\r\n    });\r\n\r\n    return cryptoUsersStats;\r\n  };\r\n\r\n  const genderStatsData = getGenderStatistics();\r\n  const ageStatsData = getAgeStatistics();\r\n  const bloodGroupStatsData = getBloodGroupStatistics();\r\n  const addressStatsData = getAddressStatistics();\r\n  const popularBank = getPopularBank();\r\n  const popularCryptoByGender = getPopularCryptoByGender();\r\n  const cryptoUsersByGenderAndAge = getNumberOfCryptoUsersByGenderAndAge();\r\n\r\n  const genderChartData = {\r\n    labels: ['Male', 'Female'],\r\n    datasets: [\r\n      {\r\n        label: 'Gender Distribution',\r\n        data: [genderStatsData.male, genderStatsData.female],\r\n        backgroundColor: ['#FF6384', '#36A2EB'],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const ageChartData = {\r\n    labels: Object.keys(ageStatsData),\r\n    datasets: [\r\n      {\r\n        label: 'Age Distribution',\r\n        data: Object.values(ageStatsData),\r\n        backgroundColor: '#FFCE56',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const bloodGroupChartData = {\r\n    labels: Object.keys(bloodGroupStatsData),\r\n    datasets: [\r\n      {\r\n        label: 'Blood Group Distribution',\r\n        data: Object.values(bloodGroupStatsData),\r\n        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0'],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const addressChartData = {\r\n    labels: Object.keys(addressStatsData),\r\n    datasets: [\r\n      {\r\n        label: 'Address Distribution',\r\n        data: Object.values(addressStatsData),\r\n        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF'],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const popularCryptoMaleData = {\r\n    labels: Object.keys(popularCryptoByGender.male),\r\n    datasets: [\r\n      {\r\n        label: 'Popular Crypto (Male)',\r\n        data: Object.values(popularCryptoByGender.male),\r\n        backgroundColor: '#FF6384',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const popularCryptoFemaleData = {\r\n    labels: Object.keys(popularCryptoByGender.female),\r\n    datasets: [\r\n      {\r\n        label: 'Popular Crypto (Female)',\r\n        data: Object.values(popularCryptoByGender.female),\r\n        backgroundColor: '#36A2EB',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const cryptoUsersByGenderAndAgeData = {\r\n    labels: Object.keys(cryptoUsersByGenderAndAge.male),\r\n    datasets: [\r\n      {\r\n        label:        'Crypto Users (Male)',\r\n        data: Object.values(cryptoUsersByGenderAndAge.male),\r\n        backgroundColor: '#FF6384',\r\n      },\r\n      {\r\n        label: 'Crypto Users (Female)',\r\n        data: Object.values(cryptoUsersByGenderAndAge.female),\r\n        backgroundColor: '#36A2EB',\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n<div>\r\n<div class=\"title-container\">\r\n    <h1 class=\"title\">Users Statistics</h1>\r\n  </div>\r\n\r\n  <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'space-between' }}>\r\n    <div style={{ maxWidth: '600px', margin: '20px', flexBasis: '48%' }}>\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <Pie data={genderChartData} />\r\n      </div>\r\n      <div>\r\n        <Bar data={ageChartData} />\r\n      </div>\r\n    </div>\r\n\r\n    <div style={{ maxWidth: '600px', margin: '20px', flexBasis: '48%' }}>\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <Pie data={bloodGroupChartData} />\r\n      </div>\r\n      <div>\r\n        <Bar data={addressChartData} />\r\n      </div>\r\n    </div>\r\n\r\n    <div style={{ maxWidth: '600px', margin: '20px', flexBasis: '48%' }}>\r\n      <div>\r\n        <p>Popular Bank: {popularBank}</p>\r\n      </div>\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <Bar data={popularCryptoMaleData} />\r\n      </div>\r\n      <div>\r\n        <Bar data={popularCryptoFemaleData} />\r\n      </div>\r\n    </div>\r\n\r\n    <div style={{ maxWidth: '600px', margin: '20px', flexBasis: '48%' }}>\r\n      <div>\r\n        <Bar data={cryptoUsersByGenderAndAgeData} />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n  );\r\n};\r\n\r\nexport default StatisticPage;\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navbar.css'; // Import your CSS file for custom styles\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <Link className=\"navbar-brand\" to=\"/\">Web Impact</Link>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/web-impact/users\">Users</Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/web-impact/statistics\">Statistics</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;","// Footer.js\r\nimport React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <div className=\"footer-container\">\r\n        <p>&copy; 2024  ABDELKHALEK AKERMI. All Rights Reserved.</p>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport UserList from './UserList'; // Import your UserList component\nimport StatisticPage from './StatisticPage'; // Import other components as needed\nimport Navbar from './Navbar'\nimport Footer from './footer';\n\nconst App = () => {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/web-impact\" component={UserList} />\n        <Route path=\"/web-impact/users\" component={UserList} />\n        <Route path=\"/web-impact/statistics\" component={StatisticPage} />\n        \n       \n      </Switch>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}